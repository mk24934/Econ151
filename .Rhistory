colour = "black",
fill = "khaki1") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist), sd = sd(df$new_dist))) +
ylab("Density") +
xlab("Differences") +
theme_minimal() +
ggtitle("Density Plot for Difference in Head Breadths") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = new_dist)) +
geom_histogram(aes(y =..density..),
breaks = seq(-3, 3, by = 0.1),
colour = "black",
fill = "khaki1") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist), sd = sd(df$new_dist))) +
ylab("Density") +
xlab("Differences") +
theme_minimal() +
ggtitle("Density Plot for Difference in Head Breadths") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist = rnorm(1000)
df <- data.frame(new_dist)
plot1 <- ggplot(df, aes(x = new_dist)) +
geom_histogram(aes(y =..density..),
breaks = seq(-3, 3, by = 0.1),
colour = "black",
fill = "khaki1") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist), sd = sd(df$new_dist))) +
ylab("Density") +
xlab("Differences") +
theme_minimal() +
ggtitle("Density Plot for Difference in Head Breadths") +
theme(plot.title = element_text(hjust = 0.5))
plot1
library(tidyverse)
library(reshape)
x <- seq(10, 45, by = 1/100);
mu = 30; sig = 4
norm_densityA <- 1/sqrt(2*pi*sig^2)*exp(-1/2*(x - mu)^2/sig^2)
mu = 25; sig = 4
norm_densityB <- 1/sqrt(2*pi*sig^2)*exp(-1/2*(x - mu)^2/sig^2)
# note to plot these using ggplot, we need to bind x and norm density together, and put in data.frame format
# type = 'SupplierA'
# dfA <- cbind(x, norm_densityA, type);
# type = 'SupplierB'
# dfB <- cbind(x, norm_densityB, type);
df <- as.data.frame(cbind(x, norm_densityA, norm_densityB))
names(df) <- c("x", "Supplier A", "Supplier B")
df_melt <- melt(df, id.vars = "x",
measure.vars = c("Supplier A", "Supplier B"),
variable.name = "densities",
value.name = "supplier")
names(df_melt) <- c("x", "Suppliers", "value")
norm_plot <- ggplot(df_melt, aes(x = x, y = value, color = Suppliers)) +
geom_line() +
geom_vline(xintercept=c(25,30), linetype="dotted") +
ylab("Density") +
xlab("Pounds") +
ggtitle("This Title") +
theme(plot.title = element_text(hjust = 0.5))
norm_plot
new_dist = 30 + 4*rnorm(1000)
df <- data.frame(new_dist)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist), sd = sd(df$new_dist))) +
ylab("Density") +
xlab("x-lab") +
theme_minimal() +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist2 = 30 + 4*rnorm(1000)
new_dist1 = 30 + 4*rnorm(1000)
new_dist2 = 30 + 4*rnorm(1000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
theme_minimal() +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist2 = 25 + 4*rnorm(1000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
theme_minimal() +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist1 = 30 + 2*rnorm(1000)
new_dist2 = 25 + 2*rnorm(1000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
x <- seq(10, 45, by = 1/100);
new_dist1 = 30 + 2*rnorm(3000)
new_dist2 = 25 + 2*rnorm(3000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist1 = 30 + 2*rnorm(1000)
new_dist2 = 25 + 2*rnorm(1000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
norm_dist <- rnorm(25)
new_dist <- frets[[2]] - frets[[4]]
ks.test(new_dist, norm_dist)
norm_dist <- rnorm(25)
ks.test(new_dist, norm_dist)
norm_dist <- rnorm(25)
ks.test(new_dist, norm_dist)
norm_dist <- rnorm(25)
ks.test(new_dist, norm_dist)
shapiro.test(new_dist)
new_dist1 = 30 + 2*rnorm(3000)
new_dist2 = 25 + 2*rnorm(3000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist1 = 30 + 2*rnorm(2000)
new_dist2 = 25 + 2*rnorm(2000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist1 = 30 + 2*rnorm(1000)
new_dist2 = 25 + 2*rnorm(1000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df, aes(x = new_dist)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
new_dist1 = 30 + 2*rnorm(1000)
new_dist2 = 25 + 2*rnorm(1000)
df <- data.frame(new_dist1, new_dist2)
plot1 <- ggplot(df) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = new_dist1)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = min(new_dist1, new_dist2):max(new_dist1,new_dist1))) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = new_dist2)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
this_min = min(new_dist1, new_dist2); this_max = max(new_dist1,new_dist1)
plot1 <- ggplot(df, aes(x = seq(this_min, this_max, by = (this_min - this_max)/dim(new_dist1)))) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
this_min - this_max
plot1 <- ggplot(df, aes(x = seq(this_min, this_max, by = (this_min - this_max)/dim(new_dist1)[1]))) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
(this_min - this_max)/dim(new_dist1)[1]
dim(new_dist1)[1]
dim(new_dist1)
plot1 <- ggplot(df, aes(x = seq(this_min, this_max, by = (this_min - this_max)/(this_min + this_max)))) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
(this_min - this_max)/(this_min + this_max)
(this_max - this_min)/(this_min + this_max)
plot1 <- ggplot(df, aes(x = seq(this_min, this_max, by = (this_max - this_min)/(this_min + this_max)))) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
x = seq(this_min, this_max, by = (this_max - this_min)/(this_min + this_max)
)
plot1 <- ggplot(df, aes(x = 1:50)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = new_dist1)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
xlim(0, 50)
plot1 <- ggplot(df, aes(x = new_dist1)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
xlim(0, 50) +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = new_dist1)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
xlim(10, 40) +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df, aes(x = new_dist1)) +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist1), sd = sd(df$new_dist1)), colour = "green") +
stat_function(fun = dnorm, args = list(mean = mean(df$new_dist2), sd = sd(df$new_dist2)), colour = "blue") +
ylab("Density") +
xlab("x-lab") +
xlim(15, 40) +
ggtitle("Density Plot") +
theme(plot.title = element_text(hjust = 0.5))
plot1
setwd("~/Dropbox/URI/Spring 2020/Metrics/ps3")
## Pset 3
## merge ps3 and cpi data
df <- read("ps3.csv")
## Pset 3
## merge ps3 and cpi data
df <- read.csv("ps3.csv")
View(df)
cpi <- read.csv("cpi.csv")
## Pset 3
library(zoo)
df <- df %>% mutate(Date = yearmon(date))
## Pset 3
library(tidyverse)
df <- df %>% mutate(Date = yearmon(date))
View(df)
df <- df %>% mutate(Date = yearmon(date))
View(df)
## merge ps3 and cpi data
df <- read.csv("ps3.csv")
Date <- df %>% mutate(Date = yearmon(date))
View(Date)
View(df)
Date <- df %>% mutate(Date = yearmon(date), "%b %Y")
View(Date)
Date <- yearmon(df$date, "%b %Y")
Date <- as.yearmon(df$date, "%b %Y")
View(df)
Date <- as.yearmon(df$date, "%Y %m %b")
Date <- as.yearmon(df$date, "%Y %m %d")
Date <- format(df$date, "%Y%m%d")
Date <- as.Date(df$date, "%Y%m%d")
Date <-  as.Date(as.yearmon(df$date, "%Y%m")
)
Date <-  as.Date(as.yearmon(df$date, "%Y%m%d")
class(df$date)
class(df$date)
Date <-  as.Date(as.yearmon(df$date, "%Y%m%d"))
## Pset 3
library(tidyverse)
library(zoo)
## merge ps3 and cpi data
df <- read.csv("ps3.csv")
Date <-  as.Date(as.yearmon(df$date, "%Y%m%d"))
Date <-  as.Date(as.yearmon(as.character(df$date), "%Y%m%d"))
Date <-  as.yearmon(as.character(df$date), "%Y%m%d")
Date <-  as.Date(as.yearmon(as.character(df$date), "%Y%m%d"))
Date <-  as.Date(as.yearmon(as.character(df$date), "%Y%m%d"), "%Y")
Date <-  as.yearmon(as.character(df$date), "%Y")
Date <-  as.Date(as.yearmon(as.character(df$date), "%Y%m%d"))
Year <- yearmon(Date, "%Y")
Year <- as.yearmon(Date, "%Y")
Date <-  as.Date(as.yearmon(ymd(df$date), "%Y%m%d"))
library(lubridate)
Date <-  as.Date(as.yearmon(ymd(df$date), "%Y%m%d"))
Year <- as.yearmon(Date, "%Y")
Date2 <- ymd(df$date)
Date2 <- year(ymd(df$date))
Date2 <-month(ymd(df$date))
cpi <- read.csv("cpi.csv")
View(cpi)
df <- df %>% mutate(year = year(ymd(date)),
month = month(ymd(date)))
View(df)
df2 <- merge(df, cpi, by = c(year, month))
df2 <- merge(df, cpi, by = c("year", "month"))
View(df2)
# adjust by cpi by multiply by base year CPI / current year CPI * nominal price
df2 <- df2 %>% mutate(realprice = 254.836/cpi*price)
write.csv(df2, 'ps3_new.csv')
setwd("~/Dropbox/URI/Spring 2020/Metrics/ps3")
write.csv(df2, 'ps3_new.csv')
ggplot(df2, aes(x = year, y = realprice)) + geom_point()
# group by treatment and control?
df2 <- df2 %>% mutate(treatment = ifelse(turbine_dist_mi < 1, 1, 0))
View(df2)
df_melt <- df %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = "treatment",
measure.vars = c("realprice"),
variable.name = "treatment",
value.name = "price")
# group by treatment and control?
library(reshape2)
df_melt <- melt(df_melt, id.vars = "treatment",
measure.vars = c("realprice"),
variable.name = "treatment",
value.name = "price")
df_melt <- df %>% select(year, realprice, treatment)
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = "treatment",
measure.vars = c("realprice"),
variable.name = "treatment",
value.name = "price")
View(df_melt)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = c("realprice"),
variable.name = "treatment",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = c("realprice"),
variable.name = "treatment",
value.name = "price")
View(df_melt)
df_melt <- melt(df_melt, id.vars = c("year"),
measure.vars = c("realprice"),
variable.name = "treated",
value.name = "price")
e
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year"),
measure.vars = c("realprice"),
variable.name = "treated",
value.name = "price")
df_melt <- melt(df_melt, id.vars = c("year"),
measure.vars = "treatment",
variable.name = "treated",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year"),
measure.vars = "treatment",
variable.name = "treated",
value.name = "price")
df2 <- df2 %>% mutate(treatment = ifelse(turbine_dist_mi < 1, "Treated", "Control"))
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
View(df_melt)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "realprice",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "realprice",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("treatment"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c( "treatment"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
df_melt <- df2 %>% select(year, realprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "realprice",
variable.name = "treated",
value.name = "price")
mean(df_melt %>% filter(treatment == "Treated"))
df_melt %>% filter(treatment == "Treated") %>% summarise(mean(realprice))
df_melt %>% filter(treatment == "Treated") %>% summarise(mean(price))
norm_plot <- ggplot(df_melt, aes(x = year, y = price, color = treatment)) +
geom_line() +
# geom_vline(xintercept=c(25,30), linetype="dotted") +
ylab("Price") +
xlab("Year") +
ggtitle("This Title") +
theme(plot.title = element_text(hjust = 0.5))
plot1 <- ggplot(df_melt, aes(x = year, y = price, color = treatment)) +
geom_line() +
# geom_vline(xintercept=c(25,30), linetype="dotted") +
ylab("Price") +
xlab("Year") +
ggtitle("This Title") +
theme(plot.title = element_text(hjust = 0.5))
plot1
df2 <- df2 %>% mutate(treatment = ifelse(turbine_dist_mi < 1, "Treated", "Control"),
logprice = log(realprice))
df_melt <- df2 %>% select(year, logprice, treatment)
df_melt <- melt(df_melt, id.vars = c("year", "treatment"),
measure.vars = "logprice",
variable.name = "treated",
value.name = "price")
plot1 <- ggplot(df_melt, aes(x = year, y = price, color = treatment)) +
geom_line() +
# geom_vline(xintercept=c(25,30), linetype="dotted") +
ylab("Price") +
xlab("Year") +
ggtitle("This Title") +
theme(plot.title = element_text(hjust = 0.5))
plot1
plot1 <- ggplot(df_melt, aes(x = year, y = price, color = treatment)) +
geom_point() +
# geom_vline(xintercept=c(25,30), linetype="dotted") +
ylab("Price") +
xlab("Year") +
ggtitle("This Title") +
theme(plot.title = element_text(hjust = 0.5))
plot1
# ----- Graph C
# plot price on y axis, year on x axis
ggplot(df2, aes(x = year, y = realprice)) + geom_point() # not much to look at here
plot1
# ----- Graph C
# plot price on y axis, year on x axis
ggplot(df2, aes(x = year, y = logprice)) + geom_point() # not much to look at here
log(1)
log(2.1/2)
(2.1-2)/2
0.5 - 0.0488
0.05 - 0.0488
100*(1+0.03)^30
setwd("~/Documents/Brandeis/Summer School/Laboratory")
View(df)
